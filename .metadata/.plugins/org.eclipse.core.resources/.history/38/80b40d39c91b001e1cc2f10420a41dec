package com.ManyToManyhibernatejpa.controller;

import org.apache.catalina.User;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;

import com.ManyToManyhibernatejpa.entity.Game;
import com.ManyToManyhibernatejpa.entity.GameRequest;
import com.ManyToManyhibernatejpa.entity.LoginScreen;
import com.ManyToManyhibernatejpa.service.GameService;

import ch.qos.logback.core.model.Model;
import jakarta.servlet.http.HttpSession;


@Controller
public class GameController {

//	@Autowired
//	private GameService gameService;
	
	  private final GameService gameService;

	    public GameController(GameService gameService) {
	        this.gameService = gameService;
	        
	    }
	    
	    

	    @PostMapping("/loginn")
	    public ResponseEntity<String> login(@RequestBody LoginScreen loginScreen) {
	        String userName = loginScreen.getUserName();
	        String password = loginScreen.getPassword();

	        // Implement your login logic here
	        // Check the provided username and password against the database or any other authentication mechanism

	        if ("admin".equals(userName) && "admin12".equals(password)) {
	            // Successful login
	            return ResponseEntity.ok("Login successful");
	        } else {
	            // Invalid login
	            return ResponseEntity.badRequest().body("Invalid username or password");
	        }
	    }
	
	        
	        @GetMapping("/ss")
	        public String loginPage() {
	            return "login";
	        }

	        @GetMapping("/login")
	        public ResponseEntity<com.ManyToManyhibernatejpa.entity.User> logins(@RequestParam("username") String username, @RequestParam("password") String password) {
	            com.ManyToManyhibernatejpa.entity.User user = gameService.login(username, password);
	            if (user != null) {
	                return ResponseEntity.ok(user);
	            }
	            return ResponseEntity.notFound().build();
	        }

	        @GetMapping("/logins")
	        public ResponseEntity<User> login(@RequestParam("username") String username, @RequestParam("password") String password) {
	            User user = (User) gameService.login(username, password);
	            if (user != null) {
	                return ResponseEntity.ok(user);
	            }
	            return ResponseEntity.notFound().build();
	        }
	        @PostMapping("/play")
	        public ResponseEntity<Game> playGame(@RequestBody GameRequest gameRequest, HttpSession session) {
	            User user = (User) session.getAttribute("user"); // Assuming you stored the logged-in user in the session with the attribute name "user"
	            if (user == null) {
	                return ResponseEntity.status(HttpStatus.UNAUTHORIZED).build();
	            }
	            Game game = gameService.playGame((com.ManyToManyhibernatejpa.entity.User) user, gameRequest.getCoinsPicked());
	            return ResponseEntity.ok(game);
	        }

//	        
//	        @PostMapping("/play")
//	        public ResponseEntity<Game> playGame(@RequestBody GameRequest gameRequest) {
//	            User user = gameService.getUserFromSession(); // Implement a method to get the logged-in user from the session
//	            Game game = gameService.playGame(user, gameRequest.getCoinsPicked());
//	            return ResponseEntity.ok(game);
//	        }
//	        @PostMapping("/play")
//	        public ResponseEntity<Game> playGame(@RequestBody GameRequest gameRequest) {
//	            User user = gameService.getUserFromSession(); // Implement a method to get the logged-in user from the session
//	            Game game = gameService.playGame(user, gameRequest.getCoinsPicked());
//	            return ResponseEntity.ok(game);
//	        }
	        
//	        @GetMapping("/game/play")
//	        public String gamePlay(Model model) {
//	            model.addAttribute("coinsRemaining", 21);
//	            return "game_play";
//	        }
//
//	        @PostMapping("/game/play")
//	        public String playGame(@RequestParam("coinsPicked") int coinsPicked) {
//	            User user = getUserFromSession(); // Implement a method to get the logged-in user from the session
//	            gameService.playGame(user, coinsPicked);
//	            return "redirect:/game/play";
//	        }
//
//	        @GetMapping("/game/history")
//	        public String gameHistory(Model model) {
//	            User user = getUserFromSession(); // Implement a method to get the logged-in user from the session
//	            List<Game> gameHistory = gameService.getGameHistory(user);
//	            model.addAttribute("gameHistory", gameHistory);
//	            return "game_history";
//	        }
	
	        
//	        @GetMapping("/game/play")
//	        public String gamePlay(Model model) {
//	            model.addAttribute("coinsRemaining", 21);
//	            return "game_play";
//	        }

//	        @PostMapping("/game/play")
//	        public String playGame(@RequestParam("coinsPicked") int coinsPicked) {
//	            User user = getUserFromSession(); // Implement a method to get the logged-in user from the session
//	            gameService.playGame(user, coinsPicked);
//	            return "redirect:/game/play";
//	        }
//
//	        @GetMapping("/game/history")
//	        public String gameHistory(Model model) {
//	            User user = getUserFromSession(); // Implement a method to get the logged-in user from the session
//	            List<Game> gameHistory = gameService.getGameHistory(user);
//	            model.addAttribute("gameHistory", gameHistory);
//	            return "game_history";
//	        }
	    }


